class Solution {
private:
    int sizeofll(ListNode*head)
    {
        int cnt = 0;
        ListNode*temp = head;
        while(temp)
        {
            cnt++;
            temp = temp->next;
        }
        return cnt;
    }
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        if(headA==NULL)
        {
            return NULL;
        }
        if(headB==NULL)
        {
            return NULL;
        }
        ListNode*temp1 = headA;
        ListNode*temp2 = headB;
        int sizeA = sizeofll(headA);
        int sizeB = sizeofll(headB);
        int effectivepoint = sizeA-sizeB;
        
        int cnt= 1;
        if(effectivepoint>0)
        {
            while(cnt<=effectivepoint)
            {
                temp1 = temp1->next;
                cnt++;
            }
        }
        else{
            effectivepoint = -effectivepoint;
            while(cnt<=effectivepoint)
            {
                temp2 = temp2->next;
                cnt++;
            }
        }
        while(temp1!=NULL&&temp2!=NULL&&temp1!=temp2)
        {
            temp1 = temp1->next;
            temp2 = temp2->next;

        }
        if(temp1==temp2)
        {
            return temp1;
        }
        else{
            return NULL;
        }


    }
};

int minSubsetSumDifference(vector<int>& arr, int n)
{
	// Write your code here.
	int sum = 0;
    for (int i = 0; i < n; i++) {
        sum += arr[i];
    }
	int mini = INT_MAX;
	vector<vector<bool>>dp(n,vector<bool>(sum+1,false));
	for(int i=0;i<n;i++)
	{
		dp[i][0] = true;
	}
	dp[0][arr[0]] =true;
	for(int i=1;i<n;i++)
	{
		for(int j=1;j<=sum;j++)
		{
			bool pick = false;
			if(arr[i]<=j)
			{
				pick = dp[i-1][j-arr[i]];
			}
			bool nopick = dp[i-1][j];
			dp[i][j] = pick|nopick;
		}
	}
	mini = min(mini,sum);
	for(int i=1;i<=sum;i++)
	{
		if(dp[n-1][i]==true)
		{
			int l1 = i;
			int l2 = sum-l1;
			int diff = abs(l1-l2);
			mini  = min(mini,diff);
		}
	}
	return mini;

}

class Solution {
public:
    void solve(vector<int>&nums,int index,vector<vector<int>>&store,vector<int>&temp)
    {
        if(index>=nums.size()) 
        {
            store.push_back(temp);
            return;
        }
        // include
        temp.push_back(nums[index]); 
        solve(nums,index+1,store,temp);
        temp.pop_back();
        // exclude
        while(index+1<=nums.size()-1&&nums[index]==nums[index+1])
        {
            index++;
        }
        
        
        solve(nums,index+1,store,temp);
        
        

    }
    vector<vector<int>> subsetsWithDup(vector<int>& nums) {
        vector<vector<int>>store;
        int index = 0;
        vector<int>temp;
        sort(nums.begin(),nums.end());
        solve(nums,index,store,temp);
        return store;
    }
};

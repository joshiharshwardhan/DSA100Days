class Solution {
public:
    vector<vector<int>> verticalTraversal(TreeNode* root) {
        vector<vector<int>>ans;
        map<int,map<int,multiset<int>>>mpp;
        queue<pair<TreeNode*,pair<int,int>>>q;
        q.push({root,{0,0}});
        while(!q.empty())
        {
            auto p = q.front();
            TreeNode*temp = q.front().first;
            int x = q.front().second.first;
            int y = q.front().second.second;
            mpp[x][y].insert({temp->val});
            q.pop();
            if(temp->left)
            {
                q.push({temp->left,{x-1,y+1}});
            }
            if(temp->right)
            {
                q.push({temp->right,{x+1,y+1}});
            }



        }
        for(auto it:mpp)
        {
            vector<int>col;
            for(auto data:it.second)
            {
                col.insert(col.end(),data.second.begin(),data.second.end());  // inserting the elements in the col vector in an ascending order of rows and columns . 
            }
            ans.push_back(col);
        }
        return ans;
    }
};

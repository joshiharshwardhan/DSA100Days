class Solution {
public:
    ListNode*solve(ListNode*list1,ListNode*list2)
    {
        if(list1->next==NULL)
        {
            list1->next = list2;
            return list1;
        }
        ListNode*curr1 = list1;
        ListNode*curr2 = list2;
        ListNode*nxt1 = list1->next;
        ListNode*nxt2 = list2->next;
        while(nxt1!=NULL&&curr2!=NULL)
        {
            if((curr2->val>=curr1->val)&&(curr2->val<nxt1->val))
            {
                nxt2 = curr2->next;
                curr1->next = curr2;
                curr2->next = nxt1;
                curr1 = curr2;
                curr2 = nxt2;
            }
            else{
                curr1 = nxt1;
                nxt1 = nxt1->next;
                if(nxt1==NULL)
                {
                    curr1->next = curr2;
                    return list1;
                }
            }
            
        }
        return list1;
    }
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        if(list1==NULL)
        {
            return list2;

        }
        if(list2==NULL)
        {
            return list1;
        }
        if(list2->val<list1->val)
        {
            return solve(list2,list1);
        }
        else{
            return solve(list1,list2);
        }
    }
};

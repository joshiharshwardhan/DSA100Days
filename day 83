#include <bits/stdc++.h> 
int f(int index,vector<int>&num,int x,int n,vector<vector<int>>&dp)
{
    if(index==0)
    {
        if(x%num[index]==0)
        {
            return x/num[index];
        }
        else{
            return 1e9;
        }
    }
    if(dp[index][x]!=-1)
    {
        return dp[index][x];
    }
    int pick = INT_MAX;
    if(num[index]<=x)
    {
        pick = 1+f(index,num,x-num[index],n,dp);

    }
    int nopick = f(index-1,num,x,n,dp);
    return dp[index][x] = min(pick,nopick);
}
int minimumElements(vector<int> &num, int x)
{
    // Write your code here.
    int n = num.size();
    int index = n-1;
    vector<vector<int>>dp(n,vector<int>(x+1,-1));
    int ans = f(index,num,x,n,dp);
    if(ans==1e9)
    {
        return -1;
    }
    else{
        return ans;
    }
} 

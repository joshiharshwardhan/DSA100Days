int knapsack(vector<int> weight, vector<int> value, int n, int maxWeight) 
{
	// Write your code here
	int index = n-1;
	vector<vector<int>>dp(n,vector<int>(maxWeight+1,0));
	for(int i=0;i<n;i++)
	{
		dp[i][0] = 0; 
	}
	for(int i=0;i<=maxWeight;i++)
	{
		if(weight[0]<=i)
		{
			dp[0][i] = value[0];
		}
	}
	for(int i=1;i<n;i++)
	{
		for(int j=1;j<=maxWeight;j++)
		{
			int nopick = dp[i-1][j];
			int pick = INT_MIN;
			if(j>=weight[i])
			{
				pick = value[i]+dp[i-1][j-weight[i]];
			}
			dp[i][j] = max(pick,nopick);
		}
	}
	return dp[n-1][maxWeight];
}

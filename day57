class Solution {
public:
    void solve(vector<int>&candidates,int target,vector<vector<int>>&store,vector<int>&temp,int index)
    {
        
        if(target==0)
        {
            store.push_back(temp);
            return;
        }
        for(int i=index;i<candidates.size();i++)
        {
            if(i>index&&candidates[i]==candidates[i-1])
            {
                continue;
            }
            if(target>=candidates[i])
            {
                temp.push_back(candidates[i]);
                solve(candidates,target-candidates[i],store,temp,i+1);
                temp.pop_back();
            }
            else{
                break;
            }
        }
    }
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        vector<vector<int>>store;
        vector<int>temp ;
        sort(candidates.begin(),candidates.end());
        solve(candidates,target,store,temp,0);
        return store;
    }
};
